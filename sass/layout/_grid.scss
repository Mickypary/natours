.row {
  max-width: $grid-width;
  margin: 0 auto;

  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-sm;
    }
  }

  @include respond(tab-port) {
    max-width: 50rem;
    padding: 0 3rem;
  }

  @include clearfix;

  // Represents elements with an attribute name of attr whose value is exactly value.
  // [attr=value]

  // Represents elements with an attribute name of attr whose value contains at least one occurrence of value within the string.
  // [attr*=value]

  // Represents elements with an attribute name of attr whose value is suffixed (followed) by value.
  // [attr$=value]

  // ^ represents elements with an attribute name of class whose value is prefixed (preceded) by col-.
  [class^="col-"] {
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @include respond(tab-port) {
        margin-right: 0;
        margin-bottom: $gutter-vertical-sm;
      }
    }

    @include respond(tab-port) {
      width: 100% !important;
    }
  }

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
    // i.e (1140px - 60px) / 2 = 540px
  }

  .col-1-of-3 {
    width: calc((100% - (#{$gutter-horizontal} * 2)) / 3);
  }

  .col-2-of-3 {
    width: calc(
      2 * ((100% - (#{$gutter-horizontal} * 2)) / 3) + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - (#{$gutter-horizontal} * 3)) / 4);
  }

  .col-2-of-4 {
    width: calc(
      2 * ((100% - (#{$gutter-horizontal} * 3)) / 4) + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    width: calc(
      3 * ((100% - (#{$gutter-horizontal} * 3)) / 4) +
        (#{$gutter-horizontal} * 2)
    );
  }
}
